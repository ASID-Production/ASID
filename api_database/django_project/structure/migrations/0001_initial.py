# Generated by Django 3.2.23 on 2024-01-23 12:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import structure.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='author')),
                ('initials', models.CharField(blank=True, max_length=250, null=True, verbose_name='author')),
            ],
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('international_coden', models.CharField(blank=True, max_length=10, null=True, verbose_name='Internations journal code')),
                ('name', models.CharField(max_length=500, verbose_name='Journal')),
                ('discontinued', models.BooleanField(blank=True, null=True, verbose_name='Discontinued')),
                ('fullname', models.CharField(max_length=1000, verbose_name='Journal')),
                ('translated_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Journal')),
                ('abbreviated_translated_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Journal')),
            ],
            options={
                'unique_together': {('name', 'fullname')},
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.CharField(blank=True, max_length=100, null=True, verbose_name='Page')),
                ('volume', models.CharField(blank=True, max_length=100, null=True, verbose_name='Volume')),
                ('year', models.PositiveIntegerField(verbose_name='Year')),
                ('doi', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='DOI')),
                ('authors', models.ManyToManyField(blank=True, related_name='publications', to='structure.Author', verbose_name='Author')),
                ('journal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='publication', to='structure.journal', verbose_name='Journal')),
            ],
            options={
                'unique_together': {('journal', 'page', 'volume', 'year', 'doi')},
            },
        ),
        migrations.CreateModel(
            name='StructureCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refcode', models.CharField(max_length=17, unique=True, verbose_name='Refcode')),
                ('CCDC_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='CCDC number')),
                ('ICSD', models.BooleanField(blank=True, null=True, verbose_name='ICSD structure')),
                ('COD', models.BooleanField(blank=True, null=True, verbose_name='Crystallography Open Database structure')),
                ('authors', models.ManyToManyField(blank=True, related_name='refcodes', to='structure.Author', verbose_name='Authors')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refcode', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
        ),
        migrations.CreateModel(
            name='Substructure2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Ph', models.BooleanField(default=False, verbose_name='Ph group')),
                ('ring6', models.BooleanField(default=False, verbose_name='6 atoms ring')),
                ('ring5', models.BooleanField(default=False, verbose_name='5 atoms ring')),
                ('ring6N1', models.BooleanField(default=False, verbose_name='6 atoms ring with one N')),
                ('ring6N2', models.BooleanField(default=False, verbose_name='6 atoms ring with two N')),
                ('ring5N1', models.BooleanField(default=False, verbose_name='5 atoms ring with one N')),
                ('ring5N2', models.BooleanField(default=False, verbose_name='5 atoms ring with two N')),
                ('iPr', models.BooleanField(default=False, verbose_name='i-Pr group')),
                ('tBu', models.BooleanField(default=False, verbose_name='t-Bu group')),
                ('C3N', models.BooleanField(default=False, verbose_name='(C)3-N group')),
                ('C2O', models.BooleanField(default=False, verbose_name='(C)2-O group')),
                ('CNO', models.BooleanField(default=False, verbose_name='C-N-O group')),
                ('C3P', models.BooleanField(default=False, verbose_name='(C)3-P group')),
                ('CO2', models.BooleanField(default=False, verbose_name='C-(O)2 group')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='substructure2', to='structure.structurecode')),
            ],
            options={
                'verbose_name_plural': 'Substructures',
            },
        ),
        migrations.CreateModel(
            name='Substructure1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('only_CHNO', models.BooleanField(default=False, verbose_name='Only CHNO atoms')),
                ('no_C', models.BooleanField(default=False, verbose_name='No C atoms')),
                ('hetero', models.BooleanField(default=False, verbose_name='Heteroatoms (B, Si, P, S, As, Se, Ge, Sb, Te)')),
                ('d_Me4', models.BooleanField(default=False, verbose_name='d-Metalls 4 group')),
                ('d_Me5', models.BooleanField(default=False, verbose_name='d-Metalls 5 group')),
                ('d_Me67', models.BooleanField(default=False, verbose_name='d-Metalls 6 group')),
                ('f_Me', models.BooleanField(default=False, verbose_name='f-Metalls')),
                ('AEMet', models.BooleanField(default=False, verbose_name='Alkali earth metalls')),
                ('AMet', models.BooleanField(default=False, verbose_name='Alkali metalls')),
                ('halogens', models.BooleanField(default=False, verbose_name='Halogen atoms')),
                ('other_met', models.BooleanField(default=False, verbose_name='Other metalls (Al, Ga, In, Sn, Tl, Pb, Bi)')),
                ('NO2', models.BooleanField(default=False, verbose_name='N-(O)2 group')),
                ('SO2', models.BooleanField(default=False, verbose_name='S-(O)2 group')),
                ('CS', models.BooleanField(default=False, verbose_name='C-S bond')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='substructure1', to='structure.structurecode')),
            ],
            options={
                'verbose_name_plural': 'Substructures',
            },
        ),
        migrations.CreateModel(
            name='Spacegroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(db_column='Number')),
                ('system', models.IntegerField(choices=[(1, 'triclinic'), (2, 'monoclinic'), (3, 'orthorombic'), (4, 'tetragonal'), (5, 'trigonal'), (6, 'hexagonal'), (7, 'cubic'), (8, 'rhombohedron')], verbose_name='lattice system')),
                ('name', models.CharField(max_length=20, verbose_name='space group')),
                ('hall_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Hall space group')),
                ('symops', models.TextField(blank=True, null=True, verbose_name='Symmetry operations')),
            ],
            options={
                'unique_together': {('name', 'hall_name')},
            },
        ),
        migrations.CreateModel(
            name='RefinementInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('r_factor', models.FloatField(blank=True, null=True, verbose_name='R1')),
                ('wR_factor', models.FloatField(blank=True, null=True, verbose_name='wR2')),
                ('gof', models.FloatField(blank=True, null=True, verbose_name='GooF')),
                ('diff_density_max', models.FloatField(blank=True, null=True, verbose_name='Maximum residual electron density')),
                ('diff_density_min', models.FloatField(blank=True, null=True, verbose_name='Minimum residual electron density')),
                ('extinction_coef', models.FloatField(blank=True, null=True, verbose_name='Extinction coefficient')),
                ('flack', models.FloatField(blank=True, null=True, verbose_name='Flack')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='refinement_info', to='structure.structurecode')),
            ],
            options={
                'verbose_name_plural': 'Refinement info',
            },
        ),
        migrations.CreateModel(
            name='RefcodePublicationConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refcode', to='structure.publication', verbose_name='Publication')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='publication', to='structure.structurecode', verbose_name='Refcode')),
            ],
        ),
        migrations.CreateModel(
            name='Other',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_3d_structure', models.BooleanField(default=True, verbose_name='Has 3d structure')),
                ('number_atoms_with_sites', models.IntegerField(blank=True, null=True, verbose_name='Number of atoms with sites')),
                ('maximum_atomic_number', models.IntegerField(blank=True, null=True, verbose_name='Maximum atomic number')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='characteristics', to='structure.structurecode')),
            ],
            options={
                'verbose_name_plural': 'Other',
            },
        ),
        migrations.CreateModel(
            name='Formula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formula_moiety', models.CharField(blank=True, max_length=500, null=True, verbose_name='Moiety Formula')),
                ('formula_sum', models.CharField(blank=True, max_length=500, null=True, verbose_name='Sum Formula')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='formula', to='structure.structurecode')),
            ],
        ),
        migrations.CreateModel(
            name='ExperimentalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('structure_determination_temperature', models.FloatField(blank=True, help_text='Temperature in Kelvin scale: 120.0', null=True, verbose_name='Temperature')),
                ('measurement_reflns', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of measurement reflections')),
                ('measurement_theta_max', models.FloatField(blank=True, null=True, verbose_name='Maximum value of measurement theta')),
                ('measurement_theta_min', models.FloatField(blank=True, null=True, verbose_name='Minimum value of measurement theta')),
                ('calculated_density_value', models.FloatField(blank=True, null=True, verbose_name='Calculated density')),
                ('absorpt_correction_type', models.CharField(blank=True, help_text='multi-scan', max_length=500, null=True, verbose_name='Absorption correction type')),
                ('measurement_device', models.CharField(blank=True, help_text='Bruker APEX-II CCD', max_length=250, null=True, verbose_name='Measurement device')),
                ('measurement_method', models.CharField(blank=True, help_text='\\w and \\f scans', max_length=250, null=True, verbose_name='Measurement method')),
                ('monochromator', models.CharField(blank=True, help_text='graphite', max_length=100, null=True, verbose_name='Monochromator')),
                ('radiation_type', models.CharField(blank=True, help_text='CuK\\a', max_length=500, null=True, verbose_name='Radiation type')),
                ('wavelength', models.FloatField(blank=True, help_text='1.54178', null=True, verbose_name='Wavelength')),
                ('radiation_source', models.CharField(blank=True, help_text='sealed tube', max_length=250, null=True, verbose_name='Radiation source')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='experimental_info', to='structure.structurecode')),
            ],
            options={
                'verbose_name_plural': 'Experimental info',
            },
        ),
        migrations.CreateModel(
            name='ElementsSet8',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Db', models.FloatField(blank=True, null=True)),
                ('Sg', models.FloatField(blank=True, null=True)),
                ('Bh', models.FloatField(blank=True, null=True)),
                ('Hs', models.FloatField(blank=True, null=True)),
                ('Mt', models.FloatField(blank=True, null=True)),
                ('Ds', models.FloatField(blank=True, null=True)),
                ('Rg', models.FloatField(blank=True, null=True)),
                ('Cn', models.FloatField(blank=True, null=True)),
                ('Nh', models.FloatField(blank=True, null=True)),
                ('Fl', models.FloatField(blank=True, null=True)),
                ('Mc', models.FloatField(blank=True, null=True)),
                ('Lv', models.FloatField(blank=True, null=True)),
                ('Ts', models.FloatField(blank=True, null=True)),
                ('Og', models.FloatField(blank=True, null=True)),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='element_set_8', to='structure.structurecode')),
            ],
        ),
        migrations.CreateModel(
            name='ElementsSet7',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('At', models.FloatField(blank=True, null=True)),
                ('Es', models.FloatField(blank=True, null=True)),
                ('Fm', models.FloatField(blank=True, null=True)),
                ('Fr', models.FloatField(blank=True, null=True)),
                ('He', models.FloatField(blank=True, null=True)),
                ('Lr', models.FloatField(blank=True, null=True)),
                ('Md', models.FloatField(blank=True, null=True)),
                ('Ne', models.FloatField(blank=True, null=True)),
                ('No', models.FloatField(blank=True, null=True)),
                ('Po', models.FloatField(blank=True, null=True)),
                ('Ra', models.FloatField(blank=True, null=True)),
                ('Rn', models.FloatField(blank=True, null=True)),
                ('Ac', models.FloatField(blank=True, null=True)),
                ('Bk', models.FloatField(blank=True, null=True)),
                ('Cf', models.FloatField(blank=True, null=True)),
                ('Rf', models.FloatField(blank=True, null=True)),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='element_set_7', to='structure.structurecode')),
            ],
        ),
        migrations.CreateModel(
            name='ElementsSet6',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Pm', models.FloatField(blank=True, null=True)),
                ('Cm', models.FloatField(blank=True, null=True)),
                ('Pa', models.FloatField(blank=True, null=True)),
                ('Kr', models.FloatField(blank=True, null=True)),
                ('Am', models.FloatField(blank=True, null=True)),
                ('Ar', models.FloatField(blank=True, null=True)),
                ('Xe', models.FloatField(blank=True, null=True)),
                ('Pu', models.FloatField(blank=True, null=True)),
                ('Np', models.FloatField(blank=True, null=True)),
                ('Tm', models.FloatField(blank=True, null=True)),
                ('Be', models.FloatField(blank=True, null=True)),
                ('Th', models.FloatField(blank=True, null=True)),
                ('Ho', models.FloatField(blank=True, null=True)),
                ('Sc', models.FloatField(blank=True, null=True)),
                ('Lu', models.FloatField(blank=True, null=True)),
                ('Tc', models.FloatField(blank=True, null=True)),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='element_set_6', to='structure.structurecode')),
            ],
        ),
        migrations.CreateModel(
            name='ElementsSet5',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Dy', models.FloatField(blank=True, null=True)),
                ('Sr', models.FloatField(blank=True, null=True)),
                ('Rb', models.FloatField(blank=True, null=True)),
                ('Hf', models.FloatField(blank=True, null=True)),
                ('Tb', models.FloatField(blank=True, null=True)),
                ('Pr', models.FloatField(blank=True, null=True)),
                ('Ce', models.FloatField(blank=True, null=True)),
                ('Er', models.FloatField(blank=True, null=True)),
                ('Tl', models.FloatField(blank=True, null=True)),
                ('Cs', models.FloatField(blank=True, null=True)),
                ('Ba', models.FloatField(blank=True, null=True)),
                ('Gd', models.FloatField(blank=True, null=True)),
                ('Y', models.FloatField(blank=True, null=True)),
                ('Ca', models.FloatField(blank=True, null=True)),
                ('Eu', models.FloatField(blank=True, null=True)),
                ('Ta', models.FloatField(blank=True, null=True)),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='element_set_5', to='structure.structurecode')),
            ],
        ),
        migrations.CreateModel(
            name='ElementsSet4',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nb', models.FloatField(blank=True, null=True)),
                ('Bi', models.FloatField(blank=True, null=True)),
                ('Nd', models.FloatField(blank=True, null=True)),
                ('Yb', models.FloatField(blank=True, null=True)),
                ('Sm', models.FloatField(blank=True, null=True)),
                ('In', models.FloatField(blank=True, null=True)),
                ('Mg', models.FloatField(blank=True, null=True)),
                ('Pb', models.FloatField(blank=True, null=True)),
                ('U', models.FloatField(blank=True, null=True)),
                ('Ge', models.FloatField(blank=True, null=True)),
                ('Te', models.FloatField(blank=True, null=True)),
                ('Ga', models.FloatField(blank=True, null=True)),
                ('Hg', models.FloatField(blank=True, null=True)),
                ('As', models.FloatField(blank=True, null=True)),
                ('Sb', models.FloatField(blank=True, null=True)),
                ('La', models.FloatField(blank=True, null=True)),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='element_set_4', to='structure.structurecode')),
            ],
        ),
        migrations.CreateModel(
            name='ElementsSet3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Os', models.FloatField(blank=True, null=True)),
                ('Zr', models.FloatField(blank=True, null=True)),
                ('V', models.FloatField(blank=True, null=True)),
                ('Ir', models.FloatField(blank=True, null=True)),
                ('Al', models.FloatField(blank=True, null=True)),
                ('Au', models.FloatField(blank=True, null=True)),
                ('K', models.FloatField(blank=True, null=True)),
                ('Cd', models.FloatField(blank=True, null=True)),
                ('Ti', models.FloatField(blank=True, null=True)),
                ('Na', models.FloatField(blank=True, null=True)),
                ('Li', models.FloatField(blank=True, null=True)),
                ('Cr', models.FloatField(blank=True, null=True)),
                ('Se', models.FloatField(blank=True, null=True)),
                ('Re', models.FloatField(blank=True, null=True)),
                ('Ag', models.FloatField(blank=True, null=True)),
                ('Rh', models.FloatField(blank=True, null=True)),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='element_set_3', to='structure.structurecode')),
            ],
        ),
        migrations.CreateModel(
            name='ElementsSet2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Pt', models.FloatField(blank=True, null=True)),
                ('Zn', models.FloatField(blank=True, null=True)),
                ('Mo', models.FloatField(blank=True, null=True)),
                ('I', models.FloatField(blank=True, null=True)),
                ('Ru', models.FloatField(blank=True, null=True)),
                ('Ni', models.FloatField(blank=True, null=True)),
                ('Co', models.FloatField(blank=True, null=True)),
                ('Br', models.FloatField(blank=True, null=True)),
                ('Si', models.FloatField(blank=True, null=True)),
                ('Fe', models.FloatField(blank=True, null=True)),
                ('B', models.FloatField(blank=True, null=True)),
                ('Cu', models.FloatField(blank=True, null=True)),
                ('Sn', models.FloatField(blank=True, null=True)),
                ('W', models.FloatField(blank=True, null=True)),
                ('Mn', models.FloatField(blank=True, null=True)),
                ('Pd', models.FloatField(blank=True, null=True)),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='element_set_2', to='structure.structurecode')),
            ],
        ),
        migrations.CreateModel(
            name='ElementsSet1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('H', models.FloatField(blank=True, null=True)),
                ('C', models.FloatField(blank=True, null=True)),
                ('N', models.FloatField(blank=True, null=True)),
                ('O', models.FloatField(blank=True, null=True)),
                ('Cl', models.FloatField(blank=True, null=True)),
                ('F', models.FloatField(blank=True, null=True)),
                ('S', models.FloatField(blank=True, null=True)),
                ('P', models.FloatField(blank=True, null=True)),
                ('D', models.FloatField(blank=True, null=True)),
                ('T', models.FloatField(blank=True, null=True)),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='element_set_1', to='structure.structurecode')),
            ],
        ),
        migrations.CreateModel(
            name='CrystalAndStructureInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(blank=True, max_length=250, null=True, verbose_name='Color')),
                ('bioactivity', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Bioactivity')),
                ('crystal_shape', models.CharField(blank=True, choices=[('block', 'block'), ('plate', 'plate'), ('needle', 'needle'), ('prism', 'prism'), ('irregular', 'irregular'), ('cube', 'cube'), ('trapezoid', 'trapezoid'), ('rect. prism', 'rect. prism'), ('rhombohedral', 'rhombohedral'), ('hexagonal', 'hexagonal'), ('octahedral', 'octahedral'), ('plank', 'plank')], max_length=200, null=True, verbose_name='Crystal shape')),
                ('phase_transitions', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Phase transitions')),
                ('polymorph', models.CharField(blank=True, max_length=500, null=True, verbose_name='Polymorph')),
                ('melting_point', models.CharField(blank=True, max_length=100, null=True, verbose_name='Melting point')),
                ('sensitivity', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Sensitivity')),
                ('pressure', models.CharField(blank=True, max_length=100, null=True, verbose_name='Pressure')),
                ('disorder', models.TextField(blank=True, db_column='Disorder', null=True, verbose_name='Disorder')),
                ('recrystallisation_solvent', models.CharField(blank=True, max_length=500, null=True, verbose_name='Recrystallisation solvent')),
                ('size_max', models.FloatField(blank=True, null=True, verbose_name='Maximum size')),
                ('size_min', models.FloatField(blank=True, null=True, verbose_name='Minimum size')),
                ('size_mid', models.FloatField(blank=True, null=True, verbose_name='Middle size')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='crystal_and_structure_info', to='structure.structurecode')),
            ],
            options={
                'verbose_name_plural': 'Crystal and structure info',
            },
        ),
        migrations.CreateModel(
            name='CoordinatesBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coordinates', models.TextField(verbose_name='Coordinates')),
                ('smiles', models.TextField(blank=True, null=True, verbose_name='Smiles')),
                ('graph', models.TextField(blank=True, editable=False, help_text='string graph for structure search', null=True, verbose_name='Graph')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='coordinates', to='structure.structurecode')),
            ],
        ),
        migrations.CreateModel(
            name='CompoundName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('systematic_name', models.CharField(blank=True, max_length=1500, null=True, verbose_name='Compound name')),
                ('trivial_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Trivial name')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='name', to='structure.structurecode')),
            ],
        ),
        migrations.CreateModel(
            name='CifFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(max_length=200, upload_to=structure.models.user_directory_path, verbose_name='Cif file')),
                ('old_file_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='File name when upload')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cif_file', to='structure.structurecode')),
            ],
        ),
        migrations.CreateModel(
            name='Cell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('centring', models.SmallIntegerField(choices=[(1, 'P'), (2, 'I'), (3, 'A'), (4, 'B'), (5, 'C'), (6, 'F'), (7, 'R')], default=1)),
                ('a', models.FloatField(db_column='LengthA', verbose_name='a')),
                ('b', models.FloatField(db_column='LengthB', verbose_name='b')),
                ('c', models.FloatField(db_column='LengthC', verbose_name='c')),
                ('al', models.FloatField(db_column='AngleAlpha', verbose_name='alpha')),
                ('be', models.FloatField(db_column='AngleBeta', verbose_name='betta')),
                ('ga', models.FloatField(db_column='AngleGamma', verbose_name='gamma')),
                ('a_err', models.CharField(db_column='LengthAErr', max_length=50, null=True, verbose_name='a')),
                ('b_err', models.CharField(db_column='LengthBErr', max_length=50, null=True, verbose_name='b')),
                ('c_err', models.CharField(db_column='LengthCErr', max_length=50, null=True, verbose_name='c')),
                ('al_err', models.CharField(db_column='AngleAlphaErr', max_length=50, null=True, verbose_name='alpha')),
                ('be_err', models.CharField(db_column='AngleBetaErr', max_length=50, null=True, verbose_name='betta')),
                ('ga_err', models.CharField(db_column='AngleGammaErr', max_length=50, null=True, verbose_name='gamma')),
                ('zvalue', models.FloatField(verbose_name='Z')),
                ('zprime', models.FloatField(blank=True, null=True, verbose_name="Z'")),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cell', to='structure.structurecode')),
                ('spacegroup', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cell', to='structure.spacegroup', verbose_name='space group')),
            ],
        ),
        migrations.CreateModel(
            name='CalculationProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orca', models.BooleanField(blank=True, null=True, verbose_name='Orca calculation')),
                ('vasp', models.BooleanField(blank=True, null=True, verbose_name='VASP calculation')),
                ('qchem', models.BooleanField(blank=True, null=True, verbose_name='QChem calculation')),
                ('gaussian', models.BooleanField(blank=True, null=True, verbose_name='Gaussian calculation')),
                ('nwchem', models.BooleanField(blank=True, null=True, verbose_name='NWChem calculation')),
                ('abinit', models.BooleanField(blank=True, null=True, verbose_name='ABINIT calculation')),
                ('crystal', models.BooleanField(blank=True, null=True, verbose_name='CRYSTAL calculation')),
                ('gamess', models.BooleanField(blank=True, null=True, verbose_name='GAMESS calculation')),
                ('mopac', models.BooleanField(blank=True, null=True, verbose_name='MOPAC calculation')),
                ('quantum_espresso', models.BooleanField(blank=True, null=True, verbose_name='Quantum ESPRESSO calculation')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='calc_prog', to='structure.structurecode')),
            ],
        ),
        migrations.CreateModel(
            name='ReducedCell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a', models.FloatField(db_column='LengthA', verbose_name='a')),
                ('b', models.FloatField(db_column='LengthB', verbose_name='b')),
                ('c', models.FloatField(db_column='LengthC', verbose_name='c')),
                ('al', models.FloatField(db_column='AngleAlpha', verbose_name='alpha')),
                ('be', models.FloatField(db_column='AngleBeta', verbose_name='betta')),
                ('ga', models.FloatField(db_column='AngleGamma', verbose_name='gamma')),
                ('volume', models.FloatField(db_column='Volume', verbose_name='Volume')),
                ('refcode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reduced_cells', to='structure.structurecode', verbose_name='Refcode')),
            ],
            options={
                'unique_together': {('refcode', 'a', 'b', 'c', 'al', 'be', 'ga')},
            },
        ),
        migrations.CreateModel(
            name='NormalisedReducedCell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a', models.FloatField(db_column='LengthA', verbose_name='a')),
                ('b', models.FloatField(db_column='LengthB', verbose_name='b')),
                ('c', models.FloatField(db_column='LengthC', verbose_name='c')),
                ('al', models.FloatField(db_column='AngleAlpha', verbose_name='alpha')),
                ('be', models.FloatField(db_column='AngleBeta', verbose_name='betta')),
                ('ga', models.FloatField(db_column='AngleGamma', verbose_name='gamma')),
                ('volume', models.FloatField(db_column='Volume', verbose_name='Volume')),
                ('refcode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='normalised_reduced_cells', to='structure.structurecode', verbose_name='Refcode')),
            ],
            options={
                'unique_together': {('refcode', 'a', 'b', 'c', 'al', 'be', 'ga')},
            },
        ),
    ]
