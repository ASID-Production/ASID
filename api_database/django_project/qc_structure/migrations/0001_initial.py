# Generated by Django 3.2.24 on 2024-10-25 10:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import qc_structure.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('structure', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='QCStructureCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refcode', models.CharField(max_length=17, unique=True, verbose_name='Refcode')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qc_refcode', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name_plural': 'QCStructureCodes',
                'ordering': ['refcode'],
            },
        ),
        migrations.CreateModel(
            name='VaspFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(max_length=200, upload_to=qc_structure.models.vasp_user_directory_path, verbose_name='VASP .xml file')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vasp_file', to='qc_structure.qcstructurecode')),
            ],
        ),
        migrations.CreateModel(
            name='QCSubstructure2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Ph', models.BooleanField(default=False, verbose_name='Ph group')),
                ('ring6', models.BooleanField(default=False, verbose_name='6 atoms ring')),
                ('ring5', models.BooleanField(default=False, verbose_name='5 atoms ring')),
                ('ring6N1', models.BooleanField(default=False, verbose_name='6 atoms ring with one N')),
                ('ring6N2', models.BooleanField(default=False, verbose_name='6 atoms ring with two N')),
                ('ring5N1', models.BooleanField(default=False, verbose_name='5 atoms ring with one N')),
                ('ring5N2', models.BooleanField(default=False, verbose_name='5 atoms ring with two N')),
                ('iPr', models.BooleanField(default=False, verbose_name='i-Pr group')),
                ('tBu', models.BooleanField(default=False, verbose_name='t-Bu group')),
                ('C3N', models.BooleanField(default=False, verbose_name='(C)3-N group')),
                ('C2O', models.BooleanField(default=False, verbose_name='(C)2-O group')),
                ('CNO', models.BooleanField(default=False, verbose_name='C-N-O group')),
                ('C3P', models.BooleanField(default=False, verbose_name='(C)3-P group')),
                ('CO2', models.BooleanField(default=False, verbose_name='C-(O)2 group')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='qc_substructure2', to='qc_structure.qcstructurecode')),
            ],
            options={
                'verbose_name_plural': 'Substructures',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QCSubstructure1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('only_CHNO', models.BooleanField(default=False, verbose_name='Only CHNO atoms')),
                ('no_C', models.BooleanField(default=False, verbose_name='No C atoms')),
                ('hetero', models.BooleanField(default=False, verbose_name='Heteroatoms (B, Si, P, S, As, Se, Ge, Sb, Te)')),
                ('d_Me4', models.BooleanField(default=False, verbose_name='d-Metalls 4 group')),
                ('d_Me5', models.BooleanField(default=False, verbose_name='d-Metalls 5 group')),
                ('d_Me67', models.BooleanField(default=False, verbose_name='d-Metalls 6 group')),
                ('f_Me', models.BooleanField(default=False, verbose_name='f-Metalls')),
                ('AEMet', models.BooleanField(default=False, verbose_name='Alkali earth metalls')),
                ('AMet', models.BooleanField(default=False, verbose_name='Alkali metalls')),
                ('halogens', models.BooleanField(default=False, verbose_name='Halogen atoms')),
                ('other_met', models.BooleanField(default=False, verbose_name='Other metalls (Al, Ga, In, Sn, Tl, Pb, Bi)')),
                ('NO2', models.BooleanField(default=False, verbose_name='N-(O)2 group')),
                ('SO2', models.BooleanField(default=False, verbose_name='S-(O)2 group')),
                ('CS', models.BooleanField(default=False, verbose_name='C-S bond')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='qc_substructure1', to='qc_structure.qcstructurecode')),
            ],
            options={
                'verbose_name_plural': 'Substructures',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QCProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('energy', models.FloatField(blank=True, null=True, verbose_name='Final energy in eV')),
                ('calculated_density', models.FloatField(blank=True, null=True, verbose_name='Calculated crystal density in g/cm^3')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='qc_properties', to='qc_structure.qcstructurecode')),
            ],
            options={
                'verbose_name_plural': 'QCProperties',
            },
        ),
        migrations.CreateModel(
            name='QCProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orca', models.BooleanField(blank=True, null=True, verbose_name='Orca calculation')),
                ('vasp', models.BooleanField(blank=True, null=True, verbose_name='VASP calculation')),
                ('qchem', models.BooleanField(blank=True, null=True, verbose_name='QChem calculation')),
                ('gaussian', models.BooleanField(blank=True, null=True, verbose_name='Gaussian calculation')),
                ('nwchem', models.BooleanField(blank=True, null=True, verbose_name='NWChem calculation')),
                ('abinit', models.BooleanField(blank=True, null=True, verbose_name='ABINIT calculation')),
                ('crystal', models.BooleanField(blank=True, null=True, verbose_name='CRYSTAL calculation')),
                ('gamess', models.BooleanField(blank=True, null=True, verbose_name='GAMESS calculation')),
                ('mopac', models.BooleanField(blank=True, null=True, verbose_name='MOPAC calculation')),
                ('quantum_espresso', models.BooleanField(blank=True, null=True, verbose_name='Quantum ESPRESSO calculation')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='qc_prog', to='qc_structure.qcstructurecode')),
            ],
            options={
                'verbose_name_plural': 'QCPrograms',
            },
        ),
        migrations.CreateModel(
            name='QCInChI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=5, verbose_name='InChI version')),
                ('formula', models.CharField(max_length=200, verbose_name='InChI formula')),
                ('connectivity', models.TextField(blank=True, null=True, verbose_name='InChI "c"')),
                ('hydrogens', models.TextField(blank=True, null=True, verbose_name='InChI "h"')),
                ('q_charge', models.CharField(blank=True, max_length=200, null=True, verbose_name='InChI "q"')),
                ('p_charge', models.CharField(blank=True, max_length=200, null=True, verbose_name='InChI "p"')),
                ('b_stereo', models.CharField(blank=True, max_length=1000, null=True, verbose_name='InChI "b"')),
                ('t_stereo', models.CharField(blank=True, max_length=1000, null=True, verbose_name='InChI "t"')),
                ('m_stereo', models.CharField(blank=True, max_length=200, null=True, verbose_name='InChI "m"')),
                ('s_stereo', models.CharField(blank=True, max_length=100, null=True, verbose_name='InChI "s"')),
                ('i_isotopic', models.CharField(blank=True, max_length=500, null=True, verbose_name='InChI "i"')),
                ('refcode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qc_inchi', to='qc_structure.qcstructurecode')),
            ],
            options={
                'verbose_name_plural': 'QCInChI graphs',
            },
        ),
        migrations.CreateModel(
            name='QCFormula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formula_moiety', models.CharField(blank=True, max_length=500, null=True, verbose_name='Moiety Formula')),
                ('formula_sum', models.CharField(blank=True, max_length=500, null=True, verbose_name='Sum Formula')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='qc_formula', to='qc_structure.qcstructurecode')),
            ],
            options={
                'verbose_name_plural': 'QCFormulas',
            },
        ),
        migrations.CreateModel(
            name='QCElementsManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element_set_1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='qc_element_set_1', to='structure.elementsset1', verbose_name='element set 1')),
                ('element_set_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='qc_element_set_2', to='structure.elementsset2', verbose_name='element set 2')),
                ('element_set_3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='qc_element_set_3', to='structure.elementsset3', verbose_name='element set 3')),
                ('element_set_4', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='qc_element_set_4', to='structure.elementsset4', verbose_name='element set 4')),
                ('element_set_5', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='qc_element_set_5', to='structure.elementsset5', verbose_name='element set 5')),
                ('element_set_6', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='qc_element_set_6', to='structure.elementsset6', verbose_name='element set 6')),
                ('element_set_7', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='qc_element_set_7', to='structure.elementsset7', verbose_name='element set 7')),
                ('element_set_8', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='qc_element_set_8', to='structure.elementsset8', verbose_name='element set 8')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='qc_elements', to='qc_structure.qcstructurecode')),
            ],
            options={
                'verbose_name_plural': 'QCElements',
            },
        ),
        migrations.CreateModel(
            name='QCCoordinatesBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coordinates', models.TextField(verbose_name='Coordinates')),
                ('smiles', models.TextField(blank=True, null=True, verbose_name='Smiles')),
                ('graph', models.TextField(blank=True, editable=False, help_text='string graph for structure search', null=True, verbose_name='Graph')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='qc_coordinates', to='qc_structure.qcstructurecode')),
            ],
            options={
                'verbose_name_plural': 'QCCoordinates',
            },
        ),
        migrations.CreateModel(
            name='QCCompoundName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('systematic_name', models.CharField(blank=True, max_length=1500, null=True, verbose_name='Compound name')),
                ('trivial_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Trivial name')),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='qc_name', to='qc_structure.qcstructurecode')),
            ],
            options={
                'verbose_name_plural': 'QCCompoundNames',
            },
        ),
        migrations.CreateModel(
            name='QCCell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('centring', models.SmallIntegerField(choices=[(1, 'P'), (2, 'I'), (3, 'A'), (4, 'B'), (5, 'C'), (6, 'F'), (7, 'R')], default=1)),
                ('a', models.FloatField(db_column='LengthA', verbose_name='a')),
                ('b', models.FloatField(db_column='LengthB', verbose_name='b')),
                ('c', models.FloatField(db_column='LengthC', verbose_name='c')),
                ('al', models.FloatField(db_column='AngleAlpha', verbose_name='alpha')),
                ('be', models.FloatField(db_column='AngleBeta', verbose_name='betta')),
                ('ga', models.FloatField(db_column='AngleGamma', verbose_name='gamma')),
                ('zvalue', models.FloatField(verbose_name='Z')),
                ('zprime', models.FloatField(blank=True, null=True, verbose_name="Z'")),
                ('refcode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='qc_cell', to='qc_structure.qcstructurecode')),
                ('spacegroup', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='qc_cell', to='structure.spacegroup', verbose_name='space group')),
            ],
            options={
                'verbose_name_plural': 'QCCells',
            },
        ),
        migrations.CreateModel(
            name='QCReducedCell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a', models.FloatField(db_column='LengthA', verbose_name='a')),
                ('b', models.FloatField(db_column='LengthB', verbose_name='b')),
                ('c', models.FloatField(db_column='LengthC', verbose_name='c')),
                ('al', models.FloatField(db_column='AngleAlpha', verbose_name='alpha')),
                ('be', models.FloatField(db_column='AngleBeta', verbose_name='betta')),
                ('ga', models.FloatField(db_column='AngleGamma', verbose_name='gamma')),
                ('volume', models.FloatField(db_column='Volume', verbose_name='Volume')),
                ('refcode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qc_reduced_cells', to='qc_structure.qcstructurecode', verbose_name='Refcode')),
            ],
            options={
                'verbose_name_plural': 'QCReducedCells',
                'unique_together': {('refcode', 'a', 'b', 'c', 'al', 'be', 'ga')},
            },
        ),
    ]
